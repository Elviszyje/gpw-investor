# PostgreSQL configuration optimized for GPW Investor application
# Based on PostgreSQL 15 best practices for OLTP workloads

# Connection and authentication
max_connections = 100
listen_addresses = '*'

# Memory settings (adjust based on available RAM)
shared_buffers = 256MB                # 25% of RAM (for 1GB RAM)
effective_cache_size = 1GB            # 75% of RAM
work_mem = 4MB                        # Per-query memory
maintenance_work_mem = 64MB           # For VACUUM, CREATE INDEX etc.

# Checkpoint and WAL settings
wal_buffers = 16MB
checkpoint_completion_target = 0.9
checkpoint_timeout = 10min
max_wal_size = 1GB
min_wal_size = 80MB

# Background writer settings
bgwriter_delay = 200ms
bgwriter_lru_maxpages = 100
bgwriter_lru_multiplier = 2.0
bgwriter_flush_after = 512kB

# Query planner settings
random_page_cost = 1.1               # For SSD storage
effective_io_concurrency = 200       # For SSD storage
default_statistics_target = 100

# Logging settings for debugging
log_destination = 'stderr'
logging_collector = on
log_directory = 'log'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_rotation_age = 1d
log_rotation_size = 100MB
log_min_duration_statement = 1000    # Log slow queries (>1s)
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on

# Autovacuum settings (important for high-insert tables)
autovacuum = on
autovacuum_max_workers = 3
autovacuum_naptime = 30s
autovacuum_vacuum_threshold = 50
autovacuum_analyze_threshold = 50
autovacuum_vacuum_scale_factor = 0.1
autovacuum_analyze_scale_factor = 0.05

# Locale and encoding
lc_messages = 'en_US.utf8'
lc_monetary = 'en_US.utf8'
lc_numeric = 'en_US.utf8'
lc_time = 'en_US.utf8'
default_text_search_config = 'pg_catalog.english'
timezone = 'Europe/Warsaw'

# Security settings
ssl = off                            # Disable SSL for internal Docker network
password_encryption = scram-sha-256

# Performance monitoring extensions
shared_preload_libraries = 'pg_stat_statements'
pg_stat_statements.max = 10000
pg_stat_statements.track = all
